// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using payoneer_net_backend.DbContexts;

#nullable disable

namespace payoneer_net_backend.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("payoneer_net_backend.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("a5c2cb45-0217-4057-acf7-2da1d500a396"),
                            CreatedAt = new DateTime(2025, 6, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            CustomerName = "Seed Customer"
                        });
                });

            modelBuilder.Entity("payoneer_net_backend.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = new Guid("a5c2cb45-0217-4057-acf7-2da1d500a396"),
                            ProductId = new Guid("d3ffbd6f-4fc8-412c-bcd9-e3a4b4b25632"),
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            OrderId = new Guid("a5c2cb45-0217-4057-acf7-2da1d500a396"),
                            ProductId = new Guid("58340ce8-ed4e-4519-ab56-98c72f8e7524"),
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("payoneer_net_backend.Models.OrderItem", b =>
                {
                    b.HasOne("payoneer_net_backend.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("payoneer_net_backend.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
